cmake_minimum_required(VERSION 3.14)

project(jknative LANGUAGES C CXX)

set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

message(STATUS "Building for X86_64 architecture")

# X86_64 simplified configuration - no LVGL, no Rockchip dependencies
find_package(PkgConfig REQUIRED)

# Try to find system libraries (optional)
pkg_check_modules(DRM libdrm)

# Get source files for X86_64 - use mock implementation
set(sources
    ${CMAKE_CURRENT_SOURCE_DIR}/ctrl_x86_64.c
    ${CMAKE_CURRENT_SOURCE_DIR}/ui_index.c
)

# Create a minimal library with mock implementations
add_library(jknative STATIC ${sources} ${CMAKE_CURRENT_SOURCE_DIR}/ctrl.h)

# Include directories
target_include_directories(jknative PRIVATE
    ${CMAKE_CURRENT_SOURCE_DIR}
    /usr/include/libdrm  # System libdrm headers
)

if(DRM_FOUND)
    target_include_directories(jknative PRIVATE ${DRM_INCLUDE_DIRS})
endif()

# Link libraries - minimal set for X86_64
target_link_libraries(jknative PRIVATE
    pthread
    m
    dl  # For dynamic loading
)

if(DRM_FOUND)
    target_link_libraries(jknative PRIVATE ${DRM_LIBRARIES})
endif()

# Add compiler definitions for X86_64 build
target_compile_definitions(jknative PRIVATE
    TARGET_ARCH_X86_64=1
    NO_LVGL=1
    NO_ROCKCHIP=1
)

install(TARGETS jknative DESTINATION lib)